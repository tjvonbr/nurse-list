// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model City {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  name          String   @db.VarChar(255)
  state         String
  stateInitials String
  zip           String
  population    Int
}

model FeatureRequest {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  subject       String
  body          String
  status        Status   @default(SUBMITTED)
  user          User     @relation(fields: [userId], references: [id])
  userId        Int

  @@map("feature_requests")
}

enum Status {
  SUBMITTED     @map("Submitted")
  CONFIRMED     @map("Confirmed")
  IN_PROGRESS   @map("In Progress")
  COMPLETED     @map("Completed")
  CANCELLED     @map("Cancelled")
}

model User {
  id              Int         @id @default(autoincrement())
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  firstName       String
  lastName        String
  email           String      @unique
  phoneNumber     String?
  gender          String?
  birthday        DateTime
  location        String
  featureRequests FeatureRequest[]
  accounts        Account[]
  sessions        Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}